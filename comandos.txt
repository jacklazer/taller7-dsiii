kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic univalle-ideas
kafka-console-producer --bootstrap-server kafka-broker-1:9092 --topic univalle-ideas
kafka-console-consumer --bootstrap-server kafka-broker-1:9092 --topic univalle-ideas --from-beginning


Para iniciar la orquestacion con kubernetes:
kubectl apply -f zookeeper-deployment.yaml
kubectl apply -f zookeeper-service.yaml
kubectl apply -f kafka-broker-1-deployment.yaml
kubectl apply -f kafka-broker-1-service.yaml
kubectl apply -f test-producer/producer-deployment.yaml
kubectl apply -f test-producer/producer-service.yaml
kubectl apply -f test-consumer/consumer-deployment.yaml
kubectl apply -f test-consumer/consumer-service.yaml
kubectl apply -f juan-service/juan-service-deployment.yaml
kubectl apply -f juan-service/juan-service-service.yaml


Para ingresar al pod de kafka:
kubectl exec -it <nombe del pod de kafka> -- /bin/bash

Para terminar la orquestacion con kubernetes:
kubectl delete -f juan-service/juan-service-service.yaml
kubectl delete -f juan-service/juan-service-deployment.yaml
kubectl delete -f test-producer/producer-service.yaml
kubectl delete -f test-producer/producer-deployment.yaml
kubectl delete -f test-consumer/consumer-service.yaml
kubectl delete -f test-consumer/consumer-deployment.yaml
kubectl delete -f kafka-broker-1-service.yaml
kubectl delete -f kafka-broker-1-deployment.yaml
kubectl delete -f zookeeper-service.yaml
kubectl delete -f zookeeper-deployment.yaml


Subir la imagen a docker hub:
docker build -t <your-dockerhub-username>/<nombre-de-la-imagen>:<tag> .
docker build --no-cache -t jacklazer/producer-kafka:<tag> .
docker push <your-dockerhub-username>/<nombre-de-la-imagen>:<tag>
docker push jacklazer/producer-kafka:<tag>
